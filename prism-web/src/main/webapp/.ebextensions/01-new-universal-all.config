Mappings: 
  AccLogBucketMap: 
    055366652659: 
      BucketName: mdh-sand-access-logs
    ? "100582527228"
    : 
      BucketName: mdh-prod-access-logs
    ? "938619397650"
    : 
      BucketName: mdh-nonprod-access-logs
  EmailDomainMap: 
    055366652659: 
      EmailDomainName: sandbox.health.state.mn.us
    ? "100582527228"
    : 
      EmailDomainName: web.health.state.mn.us
    ? "938619397650"
    : 
      EmailDomainName: nonprod.health.state.mn.us
  NessusEnvMap: 
    055366652659: 
      NessusEnvName: sandbox
      NessusS3Url: "s3://mdh-devops-archive-sandbox/nessus/NessusAgent-7.5.0-amzn.x86_64.rpm"
    ? "100582527228"
    : 
      NessusEnvName: prod
      NessusS3Url: "s3://mdh-devops-archive-prod/nessus/NessusAgent-7.5.0-amzn.x86_64.rpm"
    ? "938619397650"
    : 
      NessusEnvName: nonprod
      NessusS3Url: "s3://mdh-devops-archive-nonprod/nessus/NessusAgent-7.5.0-amzn.x86_64.rpm"
  PromeEnvMap: 
    055366652659: 
      PromeEnvName: sandbox
      PromeMonitorSG: sg-0786edfb39f3320b5
      PromeS3Url: "s3://mdh-devops-archive-sandbox/prometheus/node_exporter-0.18.1.linux-amd64.tar.gz"
    ? "100582527228"
    : 
      PromeEnvName: prod
      PromeMonitorSG: sg-0ca49c7fb7777660a
      PromeS3Url: "s3://mdh-devops-archive-prod/prometheus/node_exporter-0.18.1.linux-amd64.tar.gz"
    ? "938619397650"
    : 
      PromeEnvName: nonprod
      PromeMonitorSG: sg-0309733d1c1ed8a76
      PromeS3Url: "s3://mdh-devops-archive-nonprod/prometheus/node_exporter-0.18.1.linux-amd64.tar.gz"
  SplunkEnvMap: 
    055366652659: 
      SplunkEnvName: sandbox
      SplunkS3Url: "s3://mdh-devops-archive-sandbox/splunk/splunkforwarder-7.1.2-a0c72a66db66-linux-2.6-x86_64.rpm"
    ? "100582527228"
    : 
      SplunkEnvName: prod
      SplunkS3Url: "s3://mdh-devops-archive-prod/splunk/splunkforwarder-7.1.2-a0c72a66db66-linux-2.6-x86_64.rpm"
    ? "938619397650"
    : 
      SplunkEnvName: nonprod
      SplunkS3Url: "s3://mdh-devops-archive-nonprod/splunk/splunkforwarder-7.1.2-a0c72a66db66-linux-2.6-x86_64.rpm"
  WebNameMap: 
    055366652659: 
      WebName: sandbox.health.state.mn.us.
    ? "100582527228"
    : 
      WebName: web.health.state.mn.us.
    ? "938619397650"
    : 
      WebName: nonprod.health.state.mn.us.
Parameters: 
  SplunkServerIPAddress: 
    Default: "10.100.2.171"
    Description: "IP address of splunk server in configuration file"
    Type: String
  SplunkServerName: 
    Default: wslog08
    Description: "Name of splunk server in configuration file"
    Type: String
Resources: 
  AWSEBLoadBalancer: 
    Properties: 
      AccessLoggingPolicy: 
        EmitInterval: 5
        Enabled: true
        S3BucketName: 
          ? "Fn::FindInMap"
          : 
            - AccLogBucketMap
            - 
              Ref: "AWS::AccountId"
            - BucketName
        S3BucketPrefix: 
          Ref: AWSEBEnvironmentName
    Type: "AWS::ElasticLoadBalancing::LoadBalancer"
  EbEnvDnsName: 
    Properties: 
      Comment: "alias to elastic beanstalk app"
      HostedZoneName: 
        ? "Fn::FindInMap"
        : 
          - WebNameMap
          - 
            Ref: "AWS::AccountId"
          - WebName
      RecordSets: 
        - 
          AliasTarget: 
            DNSName: 
              ? "Fn::GetAtt"
              : 
                - AWSEBLoadBalancer
                - DNSName
            HostedZoneId: 
              ? "Fn::GetAtt"
              : 
                - AWSEBLoadBalancer
                - CanonicalHostedZoneNameID
          Name: 
            ? "Fn::Join"
            : 
              - "."
              - 
                - 
                  Ref: AWSEBEnvironmentName
                - 
                  ? "Fn::FindInMap"
                  : 
                    - WebNameMap
                    - 
                      Ref: "AWS::AccountId"
                    - WebName
          Type: A
    Type: "AWS::Route53::RecordSetGroup"
commands: 
  001_set_time_zone: 
    command: "sudo ln -f -s /usr/share/zoneinfo/US/Central /etc/localtime >> /home/ec2-user/ebe-timezone.log"
  002_restart_syslog: 
    command: "sudo /sbin/service rsyslog restart >> /home/ec2-user/ebe-timezone.log"
container_commands: 
  001_remove_cacert_mdhad_new: 
    command: "sudo keytool -delete -keystore /usr/lib/jvm/jre/lib/security/cacerts -storepass changeit -noprompt -alias mdhadnew >> /home/ec2-user/add-cacert-out.txt 2>&1"
    ignoreErrors: true
  002_remove_cacert_mdhad: 
    command: "sudo keytool -delete -keystore /usr/lib/jvm/jre/lib/security/cacerts -storepass changeit -noprompt -alias mdhad >> /home/ec2-user/add-cacert-out.txt 2>&1"
    ignoreErrors: true
  003_add_cacert_mdhad_new: 
    command: "sudo keytool -importcert -trustcacerts -keystore /usr/lib/jvm/jre/lib/security/cacerts -storepass changeit -noprompt -alias mdhadnew -file /home/ec2-user/mdh-ad-dc.crt >> /home/ec2-user/add-cacert-out.txt 2>&1"
  004_add_cacert_mdhad: 
    command: "sudo keytool -importcert -trustcacerts -keystore /usr/lib/jvm/jre/lib/security/cacerts -storepass changeit -noprompt -alias mdhad -file /home/ec2-user/mdh-ad.crt >> /home/ec2-user/add-cacert-out.txt 2>&1"
  130_remove_sendmail: 
    command: "sudo yum -y remove sendmail >> /home/ec2-user/ebe-postfix.log 2>&1"
  131_autostart_postfix: 
    command: "sudo /sbin/chkconfig postfix on >> /home/ec2-user/ebe-postfix.log 2>&1"
  132_start_postfix: 
    command: "sudo service postfix start >> /home/ec2-user/ebe-postfix.log 2>&1"
  140_tail_log: 
    command: "echo \"/var/log/maillog\" > /opt/elasticbeanstalk/tasks/taillogs.d/maillog.conf"
  141_bundle_log: 
    command: "echo \"/var/log/maillog\" > /opt/elasticbeanstalk/tasks/bundlelogs.d/maillog.conf"
  142_restart_awslogs: 
    command: "sudo service awslogsd restart"
  150_tc7_gc_tail_log: 
    command: "echo \"/var/log/tomcat/gc.log\" > /opt/elasticbeanstalk/tasks/taillogs.d/tc7gclog.conf"
  151_tc8_gc_tail_log: 
    command: "echo \"/var/log/tomcat8/gc.log\" > /opt/elasticbeanstalk/tasks/taillogs.d/tc8gclog.conf"
  152_tc7_gc_bundle_log: 
    command: "echo \"/var/log/tomcat/gc.log\" > /opt/elasticbeanstalk/tasks/bundlelogs.d/tc7gclog.conf"
  153_tc8_gc_bundle_log: 
    command: "echo \"/var/log/tomcat8/gc.log\" > /opt/elasticbeanstalk/tasks/bundlelogs.d/tc8gclog.conf"
  160_download_nessus_rpm: 
    command: /opt/nessus_agent/sbin/copy_nessus_rpm.sh
  161_install_nessus_agent_package: 
    command: "sudo rpm -Uvh --nosignature /tmp/NessusAgent-7.5.0-amzn.x86_64.rpm"
    ignoreErrors: true
  162_configure_nessus: 
    command: "sudo /opt/nessus_agent/sbin/nessuscli agent link --key=8a4d71203ea6e154c8ddfdd609b5e3e4c2b45300f00db45f6ecfe482e75c0d3c --groups=beanstalk --host=cloud.tenable.com --port=443"
    ignoreErrors: true
  163_start_nessus_agent: 
    command: "sudo service nessusagent start"
    ignoreErrors: true
  170_copy_splunk_rpm: 
    command: "sudo /opt/splunkforwarder/bin/copy_splunk_rpm_s3.sh"
    ignoreErrors: true
  171_install_splunk_forwarder_package: 
    command: "sudo rpm -Uvh --nosignature /tmp/splunkforwarder-7.1.2-a0c72a66db66-linux-2.6-x86_64.rpm"
    ignoreErrors: true
  172_configure_splunk: 
    command: "sudo /opt/splunkforwarder/bin/configure_splunk_aws.sh"
    ignoreErrors: true
  180_install_node_exporter: 
    command: "sudo /usr/local/bin/install-node-exporter.sh"
    ignoreErrors: true
  181_run_node_exporter: 
    command: "sudo /usr/local/bin/run-node-exporter.sh"
    ignoreErrors: true
  182_restart_rsyslog: 
    command: "sudo systemctl restart rsyslog"
files: 
  /etc/awslogs/config/javaspringbootlog.conf: 
    content: |
        [/var/log/web-1.log]
        log_group_name=/aws/elasticbeanstalk/`{"Ref":"AWSEBEnvironmentName"}`/var/log/web-1.log
        log_stream_name={instance_id}
        file=/var/log/web-1.log
    encoding: plain
    mode: "000644"
  /etc/awslogs/config/postfixlog.conf: 
    content: |
        [/var/log/maillog]
        log_group_name=/aws/elasticbeanstalk/`{"Ref":"AWSEBEnvironmentName"}`/var/log/maillog
        log_stream_name={instance_id}
        file=/var/log/maillog
    encoding: plain
    mode: "000644"
  /etc/awslogs/config/tomcatlogs.conf: 
    content: |
        [/var/log/tomcat/catalina.out]
        log_group_name=/aws/elasticbeanstalk/`{"Ref":"AWSEBEnvironmentName"}`/var/log/tomcat/catalina.out
        log_stream_name={instance_id}
        file=/var/log/tomcat/catalina.out
        [/var/log/tomcat/localhost_access_log.txt]
        log_group_name=/aws/elasticbeanstalk/`{"Ref":"AWSEBEnvironmentName"}`/var/log/tomcat/localhost_access_log.txt
        log_stream_name={instance_id}
        file=/var/log/tomcat/localhost_access_log.txt
        [/var/log/tomcat/gc.log]
        log_group_name=/aws/elasticbeanstalk/`{"Ref":"AWSEBEnvironmentName"}`/var/log/tomcat/gc.log
        log_stream_name={instance_id}
        file=/var/log/tomcat/gc.log
        [/var/log/tomcat/`{"Ref":"AWSEBEnvironmentName"}`.log]
        log_group_name=/aws/elasticbeanstalk/`{"Ref":"AWSEBEnvironmentName"}`/var/log/tomcat/`{"Ref":"AWSEBEnvironmentName"}`.log
        log_stream_name={instance_id}
        file=/var/log/tomcat/`{"Ref":"AWSEBEnvironmentName"}`.log
    encoding: plain
    mode: "000644"
  /etc/awslogs/config/tomcat8logs.conf: 
    content: |
        [/var/log/tomcat8/catalina.out]
        log_group_name=/aws/elasticbeanstalk/`{"Ref":"AWSEBEnvironmentName"}`/var/log/tomcat8/catalina.out
        log_stream_name={instance_id}
        file=/var/log/tomcat8/catalina.out
        [/var/log/tomcat8/localhost_access_log.txt]
        log_group_name=/aws/elasticbeanstalk/`{"Ref":"AWSEBEnvironmentName"}`/var/log/tomcat8/localhost_access_log.txt
        log_stream_name={instance_id}
        file=/var/log/tomcat8/localhost_access_log.txt
        [/var/log/tomcat8/gc.log]
        log_group_name=/aws/elasticbeanstalk/`{"Ref":"AWSEBEnvironmentName"}`/var/log/tomcat8/gc.log
        log_stream_name={instance_id}
        file=/var/log/tomcat8/gc.log
        [/var/log/tomcat8/`{"Ref":"AWSEBEnvironmentName"}`.log]
        log_group_name=/aws/elasticbeanstalk/`{"Ref":"AWSEBEnvironmentName"}`/var/log/tomcat8/`{"Ref":"AWSEBEnvironmentName"}`.log
        log_stream_name={instance_id}
        file=/var/log/tomcat8/`{"Ref":"AWSEBEnvironmentName"}`.log
    encoding: plain
    mode: "000644"
  /etc/postfix/main.cf: 
    content: |
        smtpd_banner = $myhostname ESMTP $mail_name (Ubuntu)
        biff = no
        append_dot_mydomain = no
        readme_directory = no
        smtpd_tls_cert_file=/etc/ssl/certs/ssl-cert-snakeoil.pem
        smtpd_tls_key_file=/etc/ssl/private/ssl-cert-snakeoil.key
        smtpd_use_tls=yes
        smtpd_tls_session_cache_database = btree:${data_directory}/smtpd_scache
        smtp_tls_session_cache_database = btree:${data_directory}/smtp_scache
        alias_maps = hash:/etc/aliases
        alias_database = hash:/etc/aliases
        smtp_tls_security_level = may
        smtp_tls_fingerprint_digest = md5
        smtp_tls_fingerprint_cert_match =
                47:18:14:5A:30:AC:14:51:EB:B3:19:11:80:BE:B0:4D
        mynetworks = 127.0.0.0/8,10.101.40.0/22,10.100.40.0/22
        mailbox_size_limit = 0
        recipient_delimiter = +
        inet_interfaces = loopback-only
        inet_protocols = ipv4
        relayhost = edge.ead.state.mn.us
        smtpd_relay_restrictions = permit_mynetworks permit_sasl_authenticated defer_unauth_destination
        myhostname = `{"Ref":"AWSEBEnvironmentName"}`.`{ "Fn::FindInMap" : [ "EmailDomainMap", { "Ref" : "AWS::AccountId" }, "EmailDomainName" ] }`
        myorigin = `{"Ref":"AWSEBEnvironmentName"}`.`{ "Fn::FindInMap" : [ "EmailDomainMap", { "Ref" : "AWS::AccountId" }, "EmailDomainName" ] }`
        mydestination = localhost.localdomain, localhost, `{"Ref":"AWSEBEnvironmentName"}`, `{"Ref":"AWSEBEnvironmentName"}`.`{ "Fn::FindInMap" : [ "EmailDomainMap", { "Ref" : "AWS::AccountId" }, "EmailDomainName" ] }`
    encoding: plain
    mode: "000644"
  /etc/rsyslog.d/catalina.conf: 
    content: "template(name=\"catalinalog\" type=\"string\"\n\
        string=\"%msg%\\n\")\n\
        if $programname  == 'server' then {\n\
        \x20 *.=warning;*.=err;*.=crit;*.=alert;*.=emerg /var/log/tomcat/catalina.out;catalinalog\n\
        \x20 *.=info;*.=notice /var/log/tomcat/catalina.out;catalinalog\n\
        \x20      }  \n"
    mode: "00644"
  /etc/sysconfig/clock: 
    content: |
        ZONE="US/Central"
        UTC=true
    encoding: plain
    mode: "000644"
  /home/ec2-user/mdh-ad-dc.crt: 
    content: |
        -----BEGIN CERTIFICATE-----
        MIIDDTCCAfWgAwIBAgIQYEOr9CGY95NEPkiucHyTbjANBgkqhkiG9w0BAQ0FADAZ
        MRcwFQYDVQQDEw5NREgtUk9PVC1DQS1DQTAeFw0xNzA0MTExNjUxMjFaFw0zNzA0
        MTExNzAxMjFaMBkxFzAVBgNVBAMTDk1ESC1ST09ULUNBLUNBMIIBIjANBgkqhkiG
        9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxS1+CxkzOhIT8R0K4HLfZzSTgJ74WV9DN7vB
        ndz98bK76sM+TjI+B6jNlKNFYrai6FD270QY30oM9i3QdflUoug+vAYcqMWDfVjl
        j6/1gjoN2BEM1g0xDeYiXy/fbnh1z//YLbr/NDxIpNbJdLgxcDHYgRDU+n0EZVmK
        O0mm4oSwXh0QIPXOmNcoGaKkxx1v77Lpz4jvOR1bHxUq6mqj5SvbdjcbHDRxOxPd
        9hRZLIMBd2DLjdOcRFV8EgjbBOSx6mAEvpkHE44cCKwn5NkjA8oh6zgYy4GaVDCr
        bawj++58hnHrqKrk+O5pHqlD4ykU1Mgde1G5pNfYeEi0QYt24QIDAQABo1EwTzAL
        BgNVHQ8EBAMCAYYwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUcArciNl09pjp
        vsSzhpnIM+c/5nYwEAYJKwYBBAGCNxUBBAMCAQAwDQYJKoZIhvcNAQENBQADggEB
        AAT5g8v6X5ir5iIffDgdq9buIRKLX7vp08sWgRycfo6ALEBLyZYc+EMBUHpO+9+W
        t6UE0/jK1U37AaOzz8WcPQJkQnsqIfI/7E0CTOAV0oIKFwB+15srqhEasfp7fgEa
        iQYBwRh3vojvkqKhaIbDJMBehwPPjBuy1rg7CleB3VN7o7CINpBsIf6eDKq1uHCE
        6Ym9mW43lYGpB8xY82IKKmC/DB81jIRYlqDjCube6i7ZX+VbnEx3iHCG/4q/JZOg
        6bCsaLtUJn7lrpRyiVA6bMJSOG159URHnqtNFk8zup/HUwdKvOMe9E1g/ofA3YYA
        x/LkyyrSS8UPb8wLmKJSzTE=
        -----END CERTIFICATE-----
        -----BEGIN CERTIFICATE-----
        MIIFLzCCBBegAwIBAgITPAAAAANEru+ZXvvBiAAAAAAAAzANBgkqhkiG9w0BAQ0F
        ADAZMRcwFQYDVQQDEw5NREgtUk9PVC1DQS1DQTAeFw0xNzA0MTEyMTAxNTBaFw0z
        NzA0MTExNzAxMjFaMIGKMRIwEAYKCZImiZPyLGQBGRYCVVMxEjAQBgoJkiaJk/Is
        ZAEZFgJNTjEVMBMGCgmSJomT8ixkARkWBVNUQVRFMRYwFAYKCZImiZPyLGQBGRYG
        SEVBTFRIMRYwFAYKCZImiZPyLGQBGRYGTURILUFEMRkwFwYDVQQDExBtZGgtYWQt
        TURILUNBLUNBMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA8Vr1qoOD
        AD4dyzCxM8+2JFrGYQRq8tbbssjeqhZ5Ppysp9np5BNaWWEnzvwhEepcChKdwejw
        L7cyaMJO0A9Wx582/6x/+5sJzdQN5OYLYsOqC4bEQWjeS83PGYV/XUZvEGBsgv7v
        jQ16E3XxHYbg7BRVyuD7tV95XzT2iOVV5gqRmGYjapsHq7Z0KGb/JKo6nWzwPE0l
        xO5q5Coqtq5YSyeFsyAxSYCZD7vP4DgXehAZRRL8uRDw2m8i+/J09TcyD+QOeBsb
        aJBO161kvZCrfZbHFGTlCELsp7lWc9W+wmy/IWNqMO1Y6vpREStRtOlARX8HRbkA
        lOIsb3xJCx2ucwIDAQABo4IB/DCCAfgwEAYJKwYBBAGCNxUBBAMCAQAwHQYDVR0O
        BBYEFMmQQqX8YjiayYU+mnCOTZzwYSuSMBkGCSsGAQQBgjcUAgQMHgoAUwB1AGIA
        QwBBMAsGA1UdDwQEAwIBhjAPBgNVHRMBAf8EBTADAQH/MB8GA1UdIwQYMBaAFHAK
        3IjZdPaY6b7Es4aZyDPnP+Z2MEkGA1UdHwRCMEAwPqA8oDqGOGh0dHA6Ly9tZGgt
        Y2EvQ2VydEVucm9sbC8lM0NDYW5hbWUlM0UlM0NDUkxuYW1lU3VmZml4JTNFMIIB
        HgYIKwYBBQUHAQEEggEQMIIBDDCBxAYIKwYBBQUHMAKGgbdsZGFwOi8vL0NOPU1E
        SC1ST09ULUNBLUNBLENOPUFJQSxDTj1QdWJsaWMlMjBLZXklMjBTZXJ2aWNlcyxD
        Tj1TZXJ2aWNlcyxDTj1Db25maWd1cmF0aW9uLERDPU1ESC1BRCxEQz1IZWFsdGgs
        REM9U3RhdGUsREM9TU4sREM9VVM/Y0FDZXJ0aWZpY2F0ZT9iYXNlP29iamVjdENs
        YXNzPWNlcnRpZmljYXRpb25BdXRob3JpdHkwQwYIKwYBBQUHMAKGN2h0dHA6Ly9t
        ZGgtY2EvQ2VydEVucm9sbC9NREgtUk9PVC1DQV9NREgtUk9PVC1DQS1DQS5jcnQw
        DQYJKoZIhvcNAQENBQADggEBAIod80941tDVtadcEruyPmlRTJfPJZaARpKhuhii
        M7pQdGwLeDAi68+hv94LbbtR2XTVOZBEfWNsgqPBA1X2ea9WZ7GMjdpcv7pDt0KW
        tpomPdKvJ0JvGEHWOSKNFzl8Zw221AxKutAgcJFREwGESc/dFNJsqbOS63OQY7Pm
        epQQmon0RgauLU9gq5xR/jO/7c23ZXMEACsWOjgIObvNxe56XOMMlcXVfwkBHprc
        HEY+WRuPnYJjkwTLMWeLOf3B6lM6yH0m8ZLMmB5PuGhShXYFjtQmXFxhLsKWj49h
        7imX8cD2C8dlgYy8n04yDLZjKc6/utf9qgEtva7TMXeWf3k=
        -----END CERTIFICATE-----
    encoding: plain
    mode: "000755"
  /home/ec2-user/mdh-ad.crt: 
    content: |
        -----BEGIN CERTIFICATE-----
        MIIEGDCCAwCgAwIBAgIQcnQX2Qa+NbpLGoWXUB01ezANBgkqhkiG9w0BAQUFADCB
        izESMBAGCgmSJomT8ixkARkWAlVTMRIwEAYKCZImiZPyLGQBGRYCTU4xFTATBgoJ
        kiaJk/IsZAEZFgVTVEFURTEWMBQGCgmSJomT8ixkARkWBkhFQUxUSDEWMBQGCgmS
        JomT8ixkARkWBk1ESC1BRDEaMBgGA1UEAxMRTURILUFELU1ESC1EQzEtQ0EwHhcN
        MDgwODEyMTU0ODI2WhcNMjIwNTIxMTYyNTI3WjCBizESMBAGCgmSJomT8ixkARkW
        AlVTMRIwEAYKCZImiZPyLGQBGRYCTU4xFTATBgoJkiaJk/IsZAEZFgVTVEFURTEW
        MBQGCgmSJomT8ixkARkWBkhFQUxUSDEWMBQGCgmSJomT8ixkARkWBk1ESC1BRDEa
        MBgGA1UEAxMRTURILUFELU1ESC1EQzEtQ0EwggEiMA0GCSqGSIb3DQEBAQUAA4IB
        DwAwggEKAoIBAQCMCvLzOBQI8b+tnNf8J9qB65dEDIZXxTZUpzmDGygKla1hTWTx
        j1RFJ9yxKxmbHRxgaHHKKpKldycj9UnWdrtenojt5MB1YLMJYCgYMwmqgGcpQg9p
        /zZgl1dSPUMIp1D2uxRkG/rLcZb/L70+7lpNA/YzZSl2LVkO8m2F73PvR3gHK1cS
        JPrsonmIE2W+DIw3ejCDo4FQ81v5QRO44/9TChwCOVL8krTbsPvT5UzzlTlKwMv7
        GW1ustFskCwlmXawJAE3SfIXLl1QZJm6Gb5jQ95/7HCK343GH1gpapYpmaTkyv8E
        TuTZsxbAAnVy5PVijOxFYIe2Kny2I+fxd+qvAgMBAAGjdjB0MAsGA1UdDwQEAwIB
        hjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBTPRs38s5mcF7c5g+Syjf6dPisq
        PDAQBgkrBgEEAYI3FQEEAwIBATAjBgkrBgEEAYI3FQIEFgQUEoTLoMZDNm4mwkta
        sKEucwu6P5wwDQYJKoZIhvcNAQEFBQADggEBADSi21tYQQHYYoLL5C7aNN9ZBbRn
        bZR93H3BNMbSe8DGd4pHzm2ghLOSyNDBigCOetHdoYkt/fOtuUtjltuzckeBD5qr
        Ecn/Q3hYwCmNzRT8+lmcARaB1O0P8z4U9STYrDQaDQRj5le/fMhXMZbAW0ZglaVr
        X+i/0WbE7sCC84Tm1Bst0tbs4wn9E6OTH4SxmYWSEaRq/aw4HV8b3MTHiOFev1fk
        cUvnFIhMgmkI7r3cWaNFU5ErAEUG5CYkuB+X0xGehhMMZO/GjDgfK4RKZ+jea7vb
        RVDsDWRi9xA0NXAvjZKbX2yP+AlYCRen9d21KVXtdrqe7Ywauwwrme9xEIk=
        -----END CERTIFICATE-----
    encoding: plain
    mode: "000755"
  /opt/nessus_agent/sbin/copy_nessus_rpm.sh: 
    content: |
        #! /bin/bash
        # copy_nessus_rpm.sh
        S3URL=`{ "Fn::FindInMap" : [ "NessusEnvMap", { "Ref" : "AWS::AccountId" }, "NessusS3Url" ] }`
        NESS=NessusAgent-7.5.0-amzn.x86_64.rpm
        NESSPATH=/tmp/$NESS
        NESSLOG=/var/log/copy_nessus_rpm.log
        complete=0
        count=0
        echo "`date` ${0}: starting nessus rpm download from s3" >> $NESSLOG
        while [ $complete -ne 1 -a $count -lt 5 ]; do
          count=`expr $count + 1`
          echo "`date` ${0}: download attempt ${count} for ${S3URL}" >> $NESSLOG
          aws s3 cp $S3URL /tmp/ >> $NESSLOG 2>&1
          if [ -r $NESSPATH ]; then complete=1 ; else sleep 1 ; fi 
        done
        if [ $complete -eq 1 ]; then
          echo "`date` ${0}: download success" >> $NESSLOG
          exit 0
        else
          echo "`date` ${0}: download failure" >> $NESSLOG
          exit 1
        fi
    encoding: plain
    mode: "000755"
  /opt/splunkforwarder/bin/configure_splunk_aws.sh: 
    content: |
        #! /bin/bash
        /opt/splunkforwarder/bin/splunk start --accept-license --answer-yes --no-prompt
        /opt/splunkforwarder/bin/splunk enable boot-start
        /opt/splunkforwarder/bin/splunk set servername `{"Ref":"AWSEBEnvironmentName"}` -auth admin:changeme
        /opt/splunkforwarder/bin/splunk add forward-server `{"Ref":"SplunkServerName"}`.health.state.mn.us -method clone -auth admin:changeme
        #/opt/splunkforwarder/bin/splunk add monitor /etc/hosts -auth admin:changeme
        service splunk restart
    encoding: plain
    mode: "000755"
  /opt/splunkforwarder/bin/copy_splunk_rpm_s3.sh: 
    content: |
        #! /bin/bash
        # copy_splunk_rpm_s3.sh
        S3URL=`{ "Fn::FindInMap" : [ "SplunkEnvMap", { "Ref" : "AWS::AccountId" }, "SplunkS3Url" ] }`
        SPLK=splunkforwarder-7.1.2-a0c72a66db66-linux-2.6-x86_64.rpm
        SPLKPATH=/tmp/$SPLK
        SPLKLOG=/var/log/copy_splunk_rpm_s3.log
        complete=0
        count=0
        echo "`date` ${0}: starting splunk rpm download from s3" >> $SPLKLOG
        while [ $complete -ne 1 -a $count -lt 5 ]; do
          count=`expr $count + 1`
          echo "`date` ${0}: download attempt ${count} for ${S3URL}" >> $SPLKLOG
          aws s3 cp $S3URL /tmp/ >> $SPLKLOG 2>&1
          if [ -r $SPLKPATH ]; then complete=1 ; else sleep 1 ; fi 
        done
        if [ $complete -eq 1 ]; then
          echo "`date` ${0}: download success" >> $SPLKLOG
          exit 0
        else
          echo "`date` ${0}: download failure" >> $SPLKLOG
          exit 1
        fi
    encoding: plain
    mode: "000755"
  /opt/splunkforwarder/etc/system/local/inputs.conf: 
    content: |
        [monitor:///var/log/tomcat]
        disabled = false
        sourcetype = aws-`{"Fn::FindInMap":["SplunkEnvMap",{"Ref":"AWS::AccountId"},"SplunkEnvName"]}`-`{"Ref":"AWSEBEnvironmentName"}`
        index = central
        whitelist = \.(out|log)$
        blacklist = (catalina|localhost)\.20\d\d-\d\d-\d\d.log$
        [monitor:///var/log/tomcat8]
        disabled = false
        sourcetype = aws-`{"Fn::FindInMap":["SplunkEnvMap",{"Ref":"AWS::AccountId"},"SplunkEnvName"]}`-`{"Ref":"AWSEBEnvironmentName"}`
        index = central
        whitelist = \.(out|log)$
        blacklist = (catalina|localhost)\.20\d\d-\d\d-\d\d.log$
        [monitor:///var/log/maillog]
        disabled = false
        sourcetype = aws-`{"Fn::FindInMap":["SplunkEnvMap",{"Ref":"AWS::AccountId"},"SplunkEnvName"]}`-`{"Ref":"AWSEBEnvironmentName"}`
        index = central
        [monitor:///var/log/cfn-*]
        disabled = false
        sourcetype = aws-`{"Fn::FindInMap":["SplunkEnvMap",{"Ref":"AWS::AccountId"},"SplunkEnvName"]}`-`{"Ref":"AWSEBEnvironmentName"}`
        index = central
        [monitor:///var/log/cloud-*]
        disabled = false
        sourcetype = aws-`{"Fn::FindInMap":["SplunkEnvMap",{"Ref":"AWS::AccountId"},"SplunkEnvName"]}`-`{"Ref":"AWSEBEnvironmentName"}`
        index = central
        [monitor:///var/log/eb-*]
        disabled = false
        sourcetype = aws-`{"Fn::FindInMap":["SplunkEnvMap",{"Ref":"AWS::AccountId"},"SplunkEnvName"]}`-`{"Ref":"AWSEBEnvironmentName"}`
        index = central
        [monitor:///tmp/hs_err_pid*]
        disabled = false
        sourcetype = aws-`{"Fn::FindInMap":["SplunkEnvMap",{"Ref":"AWS::AccountId"},"SplunkEnvName"]}`-`{"Ref":"AWSEBEnvironmentName"}`
        index = central
        [monitor:///var/log/web-1.log]
        disabled = false
        sourcetype = aws-`{"Fn::FindInMap":["SplunkEnvMap",{"Ref":"AWS::AccountId"},"SplunkEnvName"]}`-`{"Ref":"AWSEBEnvironmentName"}`
        index = central
    encoding: plain
    mode: "000644"
  /opt/splunkforwarder/etc/system/local/outputs.conf: 
    content: |
        [tcpout]
        defaultGroup = `{"Ref":"SplunkServerName"}`_9997
        disabled = false
        [tcpout:`{"Ref":"SplunkServerName"}`_9997]
        server = `{"Ref":"SplunkServerIPAddress"}`:9997
        [tcpout-server://`{"Ref":"SplunkServerIPAddress"}`:9997]
    encoding: plain
    mode: "000644"
  /usr/local/bin/install-node-exporter.sh: 
    content: |
        #! /bin/bash
        # install-node-exporter.sh
        S3URL=`{ "Fn::FindInMap" : [ "PromeEnvMap", { "Ref" : "AWS::AccountId" }, "PromeS3Url" ] }`
        PNEXP=node_exporter-0.18.1.linux-amd64.tar.gz
        PNEXPPATH=/tmp/$PNEXP
        PNEXPDIR=/opt/prometheus/node-exporter
        PNEXPLOG=/var/log/install-node-exporter.log
        complete=0
        count=0
        echo "`date` ${0}: starting prometheus node exporter installation" >> $PNEXPLOG
        while [ $complete -ne 1 -a $count -lt 5 ]; do
          count=`expr $count + 1`
          echo "`date` ${0}: download attempt ${count} for ${S3URL}" >> $PNEXPLOG
          aws s3 cp $S3URL /tmp/ >> $PNEXPLOG 2>&1
          if [ -r $PNEXPPATH ]; then complete=1 ; else sleep 1 ; fi 
        done
        mkdir -p $PNEXPDIR
        if [ $complete -eq 1 ]; then
          tar -C $PNEXPDIR --strip-components=1 -xzf $PNEXPPATH
          echo "`date` ${0}: installation success" >> $PNEXPLOG
          exit 0
        else
          echo "`date` ${0}: installation failure" >> $PNEXPLOG
          exit 1
        fi
    encoding: plain
    mode: "000755"
  /usr/local/bin/run-node-exporter.sh: 
    content: |
        #! /bin/bash
        NEDIR=/opt/prometheus/node-exporter
        NEBIN=node_exporter
        NELOG=/var/log/prometheus_node_exporter.log
        cd $NEDIR
        killall $NEBIN
        $NEDIR/$NEBIN >> $NELOG 2>&1 &
    encoding: plain
    mode: "000755"
option_settings: 
  - 
    namespace: "aws:elasticbeanstalk:cloudwatch:logs"
    option_name: StreamLogs
    value: true
  - 
    namespace: "aws:elasticbeanstalk:cloudwatch:logs"
    option_name: DeleteOnTerminate
    value: false
  - 
    namespace: "aws:elasticbeanstalk:cloudwatch:logs"
    option_name: RetentionInDays
    value: 90
  - 
    namespace: "aws:autoscaling:launchconfiguration"
    option_name: SecurityGroups
    value: 
      ? "Fn::FindInMap"
      : 
        - PromeEnvMap
        - 
          Ref: "AWS::AccountId"
        - PromeMonitorSG
packages: 
  yum: 
    awslogs: []
    postfix: []

