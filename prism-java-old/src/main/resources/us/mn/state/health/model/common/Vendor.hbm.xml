<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping SYSTEM
        "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">

<!--
Mapping file for the Vendor class.
-->
<hibernate-mapping package="us.mn.state.health.model.common">

    <class name="Vendor"
           table="VENDOR_TBL"
           lazy="true">

        <cache usage="nonstrict-read-write"/>

        <id name="vendorId"
            type="long"
            column="VENDOR_ID"
            unsaved-value="null">
            <generator class="sequence">
                <param name="sequence">ENTERPRISE_SEQ</param>
            </generator>
        </id>


        <!-- insertionDate. We can't change the creation time, so map it with update="false". -->
        <property name="insertionDate"
                  column="INSERTION_DATE"
                  type="date"
                  update="false"/>

        <!-- targeted -->
        <property name="targeted"
                  column="TARGETED"
                  type="yes_no"/>


        <!-- insertedBy.  -->
        <property name="insertedBy"
                  column="INSERTED_BY"
                  type="string"/>

        <property name="legacyId"
                  column="LEGACY_ID"
                  type="string"/>

        <!-- itemVendors - this is a bidirectional association; ItemVendor holds optional contract collection -->
        <set name="itemVendors"
             cascade="all,delete-orphan"
             inverse="true"
             lazy="true">
            <key column="VENDOR_ID"/>
            <one-to-many class="us.mn.state.health.model.inventory.ItemVendor"/>
        </set>

        <set name="vendorContracts"
             cascade="all,delete-orphan"
             inverse="false"
             lazy="true">
            <cache usage="read-write"/>
            <key column="VENDOR_ID"/>
            <one-to-many class="VendorContract"/>
        </set>

        <set name="vendorAccounts"
             cascade="all,delete-orphan"
             inverse="false"
             lazy="true">
            <cache usage="read-write"/>
            <key column="VENDOR_ID"/>
            <one-to-many class="VendorAccount"/>
        </set>

        <many-to-one name="externalOrgDetail"
                     class="ExternalOrgDetail"
                     column="ORG_ID"
                     cascade="save-update"/>

    </class>

    <query name="findVendorWhereNotWithItemId">
        <![CDATA[
            select vendor 
            from Vendor as vendor 
            where vendor.vendorId not in (select itemVendor.vendor.vendorId 
                                          from ItemVendor as itemVendor 
                                          where itemVendor.item.itemId = :itemId)
            order by lower(vendor.externalOrgDetail.orgName) 
        ]]>
    </query>

    <query name="findVendorNotWithUnknown">
        <![CDATA[
            select vendor
            from Vendor as vendor
            where vendor.externalOrgDetail.orgCode <> 'UNKWN'
            order by vendor.externalOrgDetail.orgName
        ]]>
    </query>
    <query name="findVendorByOrgCode">
        <![CDATA[
            select vendor
            from Vendor as vendor
            where vendor.externalOrgDetail.orgCode = :orgCode
            order by vendor.externalOrgDetail.orgName
        ]]>
    </query>
</hibernate-mapping>